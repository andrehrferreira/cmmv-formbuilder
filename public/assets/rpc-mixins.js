export default{mounted(){this.addContracts({index:{locales:{index:0,types:{Locales:0,LocalesList:1,AddLocalesRequest:2,AddLocalesResponse:3,UpdateLocalesRequest:4,UpdateLocalesResponse:5,DeleteLocalesRequest:6,DeleteLocalesResponse:7,GetAllLocalesRequest:8,GetAllLocalesResponse:9,LocalesService:10}},ws:{index:1,types:{WsCall:0}},wserror:{index:2,types:{WsError:0}}},contracts:{locales:{options:{syntax:"proto3"},nested:{locales:{nested:{Locales:{fields:{code:{type:"string",id:1},code3:{type:"string",id:2},codeNum:{type:"int32",id:3},name:{type:"string",id:4},nameOriginal:{type:"string",id:5}}},LocalesList:{fields:{items:{rule:"repeated",type:"Locales",id:1}}},AddLocalesRequest:{fields:{item:{type:"Locales",id:1}}},AddLocalesResponse:{fields:{id:{type:"string",id:1},item:{type:"Locales",id:2}}},UpdateLocalesRequest:{fields:{id:{type:"string",id:1},item:{type:"Locales",id:2}}},UpdateLocalesResponse:{fields:{id:{type:"string",id:1},item:{type:"Locales",id:2}}},DeleteLocalesRequest:{fields:{id:{type:"string",id:1}}},DeleteLocalesResponse:{fields:{success:{type:"bool",id:1},affected:{type:"int32",id:2},id:{type:"string",id:3}}},GetAllLocalesRequest:{fields:{}},GetAllLocalesResponse:{fields:{items:{type:"LocalesList",id:1}}},LocalesService:{methods:{AddLocales:{requestType:"AddLocalesRequest",responseType:"AddLocalesResponse"},UpdateLocales:{requestType:"UpdateLocalesRequest",responseType:"UpdateLocalesResponse"},DeleteLocales:{requestType:"DeleteLocalesRequest",responseType:"DeleteLocalesResponse"},GetAllLocales:{requestType:"GetAllLocalesRequest",responseType:"GetAllLocalesResponse"}}}}}}},ws:{options:{syntax:"proto3"},nested:{ws:{nested:{WsCall:{fields:{contract:{type:"int32",id:1},message:{type:"int32",id:2},data:{type:"bytes",id:3}}}}}}},wserror:{options:{syntax:"proto3"},nested:{wserror:{nested:{WsError:{fields:{message:{type:"string",id:1},code:{type:"int32",id:2},context:{type:"string",id:3}}}}}}}}}),this.connectWebSocket()},data(){return{socket:null,contractIndex:0,contracts:{},binds:{}}},methods:{connectWebSocket(){var e=window.location.href.replace("https","wss").replace("http","ws");this.socket=new WebSocket(e),this.socket.binaryType="arraybuffer",this.socket.addEventListener("message",this.parseMessage),this.socket.addEventListener("open",()=>{}),this.socket.addEventListener("close",()=>{console.warn("WebSocket disconnected. Attempting to reconnect in 10 seconds..."),setTimeout(()=>{this.connectWebSocket()},this.reconnectInterval)}),this.socket.addEventListener("error",e=>{console.error("WebSocket error:",e)})},addContracts(e){try{for(var t in this.contractIndex=e.index,e.contracts){var s;e.contracts.hasOwnProperty(t)&&(s=protobuf.Root.fromJSON(e.contracts[t]),this.contracts[t]=s)}}catch(e){console.error("Error loading contracts:",e)}},getContract(e){return this.contracts[e]},parseMessage(c){try{var e=c.data instanceof ArrayBuffer?new Uint8Array(c.data):c.data;let s=this.contracts.ws.lookupType("WsCall").decode(e),o=Object.keys(this.contractIndex).find(e=>this.contractIndex[e].index===s.contract);var n=Object.keys(this.contractIndex[o].types).find(e=>this.contractIndex[o].types[e]===s.message);if(o&&n){let t=this.getContract(o).lookupType(n).decode(s.data);this.binds[o]&&this.binds[o][n]&&this.binds[o][n].forEach(e=>e.apply(this.contextApp,[t,c.socket])),"function"==typeof this[n]&&this[n].call(this,t,c.socket)}else console.error("Unknown contract or message type:",s.contract,s.message)}catch(e){console.error(e)}},pack(e,t,s){try{var o,c,n,a,i;return this.contracts[e]&&this.contractIndex[e]?(c=(o=this.contractIndex[e])?.types[t],a=(n=this.contracts[e]?.lookupType(t))&&s?n.encode(s).finish():null,(i=(this.contracts.ws?.lookupType("WsCall"))?.encode({contract:o?.index,message:c,data:a&&a instanceof Uint8Array?a:new Uint8Array}).finish())?new Uint8Array(i):null):(console.error(`Not found in contract list ${e}.`+t),null)}catch(e){console.error(e)}},send(e){this.socket&&this.socket.readyState===WebSocket.OPEN?this.socket.send(e):console.warn("WebSocket is not open. Unable to send message.")},AddLocalesRequest(e){e=this.pack("locales","AddLocalesRequest",{item:e});this.send(e)},UpdateLocalesRequest(e){e=this.pack("locales","UpdateLocalesRequest",{id:e._id||e.id,item:e});this.send(e)},DeleteLocalesRequest(e){e=this.pack("locales","DeleteLocalesRequest",{id:e._id||e.id});this.send(e)},GetAllLocalesRequest(){var e=this.pack("locales","GetAllLocalesRequest");this.send(e)}}};